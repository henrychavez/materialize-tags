{"version":3,"sources":["materialize-tags.js"],"names":["$","tagClass","item","itemValue","toString","itemText","this","itemTitle","onTagExists","$tag","hide","fadeIn","TagsMaterialize","element","options","itemsArray","$element","objectItems","placeholderText","hasAttribute","attr","inputSize","Math","max","length","$container","$input","appendTo","$label","parent","find","before","build","on","addClass","next","focus","label","parents","hasClass","parentContainer","tags","removeClass","val","makeOptionItemFunction","key","propertyName","makeOptionFunction","value","htmlEncode","htmlEncodeContainer","text","html","doGetCaretPosition","oField","iCaretPos","document","selection","oSel","createRange","moveStart","selectionStart","keyCombinationInList","keyDownEvent","lookupList","found","each","index","keyCombination","which","alt","hasOwnProperty","altKey","shift","shiftKey","ctrl","ctrlKey","defaultOptions","freeInput","addOnBlur","maxTags","undefined","maxChars","confirmKeys","trimValue","allowDuplicates","deleteTagsOnBackspace","deleteTagsOnDeleteKey","MoveTagOnLeftArrow","MoveTagOnRightArrow","autoselect","CapitalizeFirstLetterOnly","prefilled","prototype","constructor","add","dontPushVal","self","trim","charAt","toUpperCase","slice","match","tagName","items","split","i","pushVal","existing","grep","maxInputLength","beforeItemAddEvent","Event","cancel","trigger","push","data","findInputWrapper","after","blur","prop","$existingTag","filter","remove","other","beforeItemRemoveEvent","inArray","splice","removeAll","pop","refresh","contents","nodeType","nodeValue","map","typeahead","extend","typeaheadjs","typeaheadConfig","typeaheadDatasets","isArray","proxy","obj","datum","valueKey","event","removeAttr","target","$inputWrapper","prev","$prevTag","$nextTag","textLength","ceil","maxLengthReached","substr","preventDefault","closest","destroy","off","removeData","show","input","elt","container","parentNode","fn","materialtags","arg1","arg2","arg3","results","retVal","defaults","Constructor","window","jQuery"],"mappings":"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","file":"materialize-tags.min.js","sourcesContent":["(function ($)\r\n{\r\n    \"use strict\";\r\n\r\n    /**\r\n    * Default Configuration\r\n    *\r\n    * @type {{tagClass: tagClass, itemValue: itemValue, itemText: itemText, itemTitle: itemTitle, freeInput: boolean, addOnBlur: boolean, maxTags: undefined, maxChars: undefined, confirmKeys: number[], onTagExists: onTagExists, trimValue: boolean, allowDuplicates: boolean}}\r\n    */\r\n    var defaultOptions = {\r\n        tagClass                    : tagClass,\r\n        itemValue                   : itemValue,\r\n        itemText                    : itemText,\r\n        itemTitle                   : itemTitle,\r\n        freeInput                   : true,\r\n        addOnBlur                   : true,\r\n        maxTags                     : undefined,\r\n        maxChars                    : undefined,\r\n        confirmKeys                 : [9,13, 44, 188],\r\n        onTagExists                 : onTagExists,\r\n        trimValue                   : true,\r\n        allowDuplicates             : false,\r\n        deleteTagsOnBackspace       : true,\r\n        deleteTagsOnDeleteKey       : true,\r\n        MoveTagOnLeftArrow          : true,\r\n        MoveTagOnRightArrow         : true,\r\n        autoselect                  : false,\r\n        CapitalizeFirstLetterOnly   : false,\r\n        prefilled                   : null,\r\n    };\r\n\r\n\r\n    function tagClass(item)\r\n    {\r\n        return 'chip';\r\n    }\r\n\r\n    function itemValue(item)\r\n    {\r\n        return item ? item.toString() : item;\r\n    }\r\n\r\n    function itemText(item)\r\n    {\r\n        return this.itemValue(item);\r\n    }\r\n\r\n    function itemTitle(item)\r\n    {\r\n        return null;\r\n    }\r\n\r\n    function onTagExists(item, $tag)\r\n    {\r\n        $tag.hide().fadeIn();\r\n    }\r\n\r\n    function selectFirstSuggestion(){\r\n        $('.tt-suggestion.tt-selectable').first().addClass('tt-cursor');\r\n        console.log($('.tt-suggestion.tt-selectable'));\r\n    }\r\n\r\n    /**\r\n    * Constructor function\r\n    *\r\n    * @param element\r\n    * @param options\r\n    * @constructor\r\n    */\r\n    function TagsMaterialize(element, options)\r\n    {\r\n        this.itemsArray = [];\r\n\r\n        this.$element = $(element);\r\n        this.$element.hide();\r\n\r\n        this.objectItems    = options && options.itemValue;\r\n        this.placeholderText = element.hasAttribute('placeholder') ? this.$element.attr('placeholder') : '';\r\n        this.inputSize      = Math.max(1, this.placeholderText.length);\r\n\r\n        this.$container = $('<div class=\"materialize-tags\"></div>');\r\n        this.$input    = $('<input type=\"text\" class=\"n-tag\"  placeholder=\"' + this.placeholderText + '\"/>').appendTo(this.$container);\r\n        this.$label    = this.$element.parent().find('label');\r\n\r\n        this.$element.before(this.$container);\r\n        this.build(options);\r\n\r\n        this.$label.on('click', function ()\r\n        {\r\n            $(this).addClass('active');\r\n            $(this).next('.materialize-tags').find('input.n-tag').focus();\r\n        });\r\n\r\n        this.$input.on('focus', function ()\r\n        {\r\n            var label = $(this).parents('.materialize-tags').parent().find('label');\r\n            $(this).parents('.materialize-tags').addClass('active');\r\n\r\n            if (!label.hasClass('active'))\r\n            {\r\n                label.addClass('active');\r\n            }\r\n        }).on('focusout', function ()\r\n        {\r\n            var parentContainer = $(this).parents('.materialize-tags'),\r\n                tags            = parentContainer.find('span.chip');\r\n            parentContainer.removeClass('active');\r\n            // Verify if is empty and remove \"active\" class from label\r\n            if (tags.length == 0 && $(this).val().length == 0)\r\n            {\r\n                parentContainer.parent().find('label').removeClass('active');\r\n            }\r\n        });\r\n    }\r\n\r\n    TagsMaterialize.prototype = {\r\n        constructor : TagsMaterialize,\r\n\r\n        /**\r\n        * Adds the given item as a new tag. Pass true to dontPushVal to prevent\r\n        * updating the elements val()\r\n        *\r\n        * @param item\r\n        * @param dontPushVal\r\n        * @param options\r\n        */\r\n        add : function (item, dontPushVal, options)\r\n        {\r\n            var self = this;\r\n\r\n            if (self.options.maxTags && self.itemsArray.length >= self.options.maxTags)\r\n            {\r\n                return;\r\n            }\r\n\r\n            // Ignore false values, except false\r\n            if (item !== false && !item)\r\n            {\r\n                return;\r\n            }\r\n\r\n            // Trim value\r\n            if (typeof item === \"string\" && self.options.trimValue)\r\n            {\r\n                item = $.trim(item);\r\n            }\r\n\r\n            // CapitalizeFirstLetter\r\n            if (typeof item === \"string\" && self.options.CapitalizeFirstLetterOnly)\r\n            {\r\n                item = item.charAt(0).toUpperCase() + item.slice(1);\r\n            }\r\n\r\n            // Throw an error when trying to add an object while the itemValue option was not set\r\n            if (typeof item === \"object\" && !self.objectItems)\r\n            {\r\n                throw(\"Can't add objects when itemValue option is not set\");\r\n            }\r\n\r\n            // Ignore strings only contain whitespace\r\n            if (item.toString().match(/^\\s*$/))\r\n            {\r\n                return;\r\n            }\r\n\r\n            if (typeof item === \"string\" && this.$element[0].tagName === 'INPUT')\r\n            {\r\n                var items = item.split(',');\r\n                if (items.length > 1)\r\n                {\r\n                    for (var i = 0; i < items.length; i++)\r\n                    {\r\n                        this.add(items[i], true);\r\n                    }\r\n\r\n                    if (!dontPushVal)\r\n                    {\r\n                        self.pushVal();\r\n                    }\r\n                    return;\r\n                }\r\n            }\r\n\r\n            var itemValue = self.options.itemValue(item),\r\n                itemText  = self.options.itemText(item),\r\n                tagClass  = self.options.tagClass(item),\r\n                itemTitle = self.options.itemTitle(item);\r\n\r\n            // Ignore items all ready added\r\n            var existing = $.grep(self.itemsArray, function (item) { return self.options.itemValue(item) === itemValue; })[0];\r\n            if (existing && !self.options.allowDuplicates)\r\n            {\r\n                // Invoke onTagExists\r\n                if (self.options.onTagExists)\r\n                {\r\n                    var $existingTag = $(\".tag\", self.$container).filter(function () { return $(this).data(\"item\") === existing; });\r\n                    self.options.onTagExists(item, $existingTag);\r\n                }\r\n                return;\r\n            }\r\n\r\n            // if length greater than limit\r\n            if (self.items().toString().length + item.length + 1 > self.options.maxInputLength)\r\n            {\r\n                return;\r\n            }\r\n\r\n            // raise beforeItemAdd arg\r\n            var beforeItemAddEvent = $.Event('beforeItemAdd', {item : item, cancel : false, options : options});\r\n            self.$element.trigger(beforeItemAddEvent);\r\n            if (beforeItemAddEvent.cancel)\r\n            {\r\n                return;\r\n            }\r\n\r\n            // register item in internal array and map\r\n            self.itemsArray.push(item);\r\n\r\n            // add a tag element\r\n            var $tag = $('<span class=\"' + htmlEncode(tagClass) + (itemTitle !== null ? ('\" title=\"' + itemTitle) : '') + '\">' + htmlEncode(itemText) + '<i class=\"material-icons\" data-role=\"remove\">close</i></span>');\r\n            $tag.data('item', item);\r\n            self.findInputWrapper().before($tag);\r\n            $tag.after(' ');\r\n\r\n            if (!dontPushVal)\r\n            {\r\n                self.pushVal();\r\n            }\r\n\r\n            // Add class when reached maxTags\r\n            if (self.options.maxTags === self.itemsArray.length || self.items().toString().length === self.options.maxInputLength)\r\n            {\r\n                self.$container.addClass('materialize-tags-max');\r\n                self.$input.blur();\r\n                self.$input.prop('readOnly', true);\r\n            }\r\n\r\n            self.$element.trigger($.Event('itemAdded', {item : item, options : options}));\r\n        },\r\n\r\n        /**\r\n        * Removes the given item. Pass true to dontPushVal to prevent updating the\r\n        * elements val()\r\n        *\r\n        * @param item\r\n        * @param dontPushVal\r\n        * @param options\r\n        */\r\n        remove : function (item, dontPushVal, options)\r\n        {\r\n            var self = this;\r\n\r\n            if (self.objectItems)\r\n            {\r\n                if (typeof item === \"object\")\r\n                {\r\n                    item = $.grep(self.itemsArray, function (other) { return self.options.itemValue(other) == self.options.itemValue(item); });\r\n                }\r\n                else\r\n                {\r\n                    item = $.grep(self.itemsArray, function (other) { return self.options.itemValue(other) == item; });\r\n                }\r\n\r\n                item = item[item.length - 1];\r\n            }\r\n\r\n            if (item)\r\n            {\r\n                var beforeItemRemoveEvent = $.Event('beforeItemRemove', {\r\n                    item    : item,\r\n                    cancel  : false,\r\n                    options : options\r\n                });\r\n                self.$element.trigger(beforeItemRemoveEvent);\r\n                if (beforeItemRemoveEvent.cancel)\r\n                {\r\n                    return;\r\n                }\r\n\r\n                $('.chip', self.$container).filter(function () { return $(this).data('item') === item; }).remove();\r\n\r\n                if ($.inArray(item, self.itemsArray) !== -1)\r\n                {\r\n                    self.itemsArray.splice($.inArray(item, self.itemsArray), 1);\r\n                }\r\n            }\r\n\r\n            if (!dontPushVal)\r\n            {\r\n                self.pushVal();\r\n            }\r\n\r\n            // Remove class when reached maxTags\r\n            if (self.options.maxTags > self.itemsArray.length)\r\n            {\r\n                self.$container.removeClass('materialize-tags-max');\r\n                self.$input.prop('readOnly', false);\r\n            }\r\n            self.$input.blur();\r\n            self.$element.trigger($.Event('itemRemoved', {item : item, options : options}));\r\n        },\r\n\r\n        /**\r\n        * Removes all items\r\n        */\r\n        removeAll : function ()\r\n        {\r\n            var self = this;\r\n\r\n            $('.chip', self.$container).remove();\r\n\r\n            while (self.itemsArray.length > 0)\r\n            {\r\n                self.itemsArray.pop();\r\n            }\r\n\r\n            self.pushVal();\r\n        },\r\n\r\n        /**\r\n        * Refreshes the tags so they match the text/value of their corresponding\r\n        * item.\r\n        */\r\n        refresh : function ()\r\n        {\r\n            var self = this;\r\n            $('.chip', self.$container).each(function ()\r\n            {\r\n                var $tag        = $(this),\r\n                    item        = $tag.data('item'),\r\n                    itemValue   = self.options.itemValue(item),\r\n                    itemText    = self.options.itemText(item),\r\n                    tagClass    = self.options.tagClass(item);\r\n\r\n                // Update tag's class and inner text\r\n                $tag.attr('class', null);\r\n                $tag.addClass('tag ' + htmlEncode(tagClass));\r\n                $tag.contents().filter(function ()\r\n                {\r\n                    return this.nodeType == 3;\r\n                })[0].nodeValue = htmlEncode(itemText);\r\n\r\n            });\r\n        },\r\n\r\n        /**\r\n        * Returns the items added as tags\r\n        */\r\n        items : function ()\r\n        {\r\n            return this.itemsArray;\r\n        },\r\n\r\n        /**\r\n        * Assembly value by retrieving the value of each item, and set it on the\r\n        * element.\r\n        */\r\n        pushVal : function ()\r\n        {\r\n            var self = this,\r\n                val  = $.map(self.items(), function (item)\r\n                {\r\n                    return self.options.itemValue(item).toString();\r\n                });\r\n\r\n            self.$element.val(val, true).trigger('change');\r\n            self.$input.typeahead('val', '');\r\n        },\r\n\r\n        /**\r\n        * Initializes the tags input behaviour on the element\r\n        *\r\n        * @param options\r\n        */\r\n        build : function (options)\r\n        {\r\n            var self = this;\r\n\r\n            self.options = $.extend({}, defaultOptions, options);\r\n            // When itemValue is set, freeInput should always be false\r\n\r\n            if (self.objectItems)\r\n            {\r\n                self.options.freeInput = false;\r\n            }\r\n\r\n            makeOptionItemFunction(self.options, 'itemValue');\r\n            makeOptionItemFunction(self.options, 'itemText');\r\n            makeOptionFunction(self.options, 'tagClass');\r\n\r\n            // Typeahead.js\r\n            if (self.options.typeaheadjs)\r\n            {\r\n                var typeaheadConfig   = null;\r\n                var typeaheadDatasets = {};\r\n\r\n                // Determine if main configurations were passed or simply a dataset\r\n                var typeaheadjs = self.options.typeaheadjs;\r\n                if ($.isArray(typeaheadjs))\r\n                {\r\n                    typeaheadConfig   = typeaheadjs[0];\r\n                    typeaheadDatasets = typeaheadjs[1];\r\n                }\r\n                else\r\n                {\r\n                    typeaheadDatasets = typeaheadjs;\r\n                }\r\n\r\n                self.$input.typeahead(typeaheadConfig, typeaheadDatasets).on('typeahead:selected', $.proxy(function (obj, datum)\r\n                {\r\n                    if (typeaheadDatasets.valueKey)\r\n                    {\r\n                        self.add(datum[typeaheadDatasets.valueKey]);\r\n                    }\r\n                    else\r\n                    {\r\n                        self.add(datum);\r\n                    }\r\n                    self.$input.typeahead('val', '');\r\n                }, self));\r\n            }\r\n\r\n            self.$container.on('click', $.proxy(function (event)\r\n            {\r\n                if (!self.$element.attr('disabled'))\r\n                {\r\n                    self.$input.removeAttr('disabled');\r\n                }\r\n                self.$input.focus();\r\n            }, self));\r\n\r\n            if (self.options.addOnBlur && self.options.freeInput)\r\n            {\r\n                self.$input.on('focusout', $.proxy(function (event)\r\n                {\r\n                    self.add(self.$input.val());\r\n\r\n                }, self));\r\n            }\r\n\r\n            self.$container.on('keydown', 'input', $.proxy(function (event)\r\n            {\r\n                var $input        = $(event.target),\r\n                    $inputWrapper = self.findInputWrapper();\r\n\r\n                if (self.$element.attr('disabled'))\r\n                {\r\n                    self.$input.attr('disabled', 'disabled');\r\n                    return;\r\n                }\r\n\r\n                switch (event.which)\r\n                {\r\n                    // BACKSPACE\r\n                    case 8:\r\n                        if (self.options.deleteTagsOnBackspace && doGetCaretPosition($input[0]) === 0)\r\n                        {\r\n                            var prev = $inputWrapper.prev();\r\n                            if (prev)\r\n                            {\r\n                                self.remove(prev.data('item'));\r\n                            }\r\n                        }\r\n                        break;\r\n\r\n                    // DELETE\r\n                    case 46:\r\n                        if (self.options.deleteTagsOnDeleteKey && doGetCaretPosition($input[0]) === 0)\r\n                        {\r\n                            var next = $inputWrapper.next();\r\n                            if (next)\r\n                            {\r\n                                self.remove(next.data('item'));\r\n                            }\r\n                        }\r\n                        break;\r\n\r\n                    // LEFT ARROW\r\n                    case 37:\r\n                        // Try to move the input before the previous tag\r\n                        var $prevTag = $inputWrapper.prev();\r\n                        if (self.options.MoveTagOnLeftArrow && $input.val().length === 0 && $prevTag[0])\r\n                        {\r\n                            $prevTag.before($inputWrapper);\r\n                            $input.focus();\r\n                        }\r\n                        break;\r\n                    // RIGHT ARROW\r\n                    case 39:\r\n                        // Try to move the input after the next tag\r\n                        var $nextTag = $inputWrapper.next();\r\n                        if (self.options.MoveTagOnRightArrow && $input.val().length === 0 && $nextTag[0])\r\n                        {\r\n                            $nextTag.after($inputWrapper);\r\n                            $input.focus();\r\n                        }\r\n                        break;\r\n                    default:\r\n                    // ignore\r\n                }\r\n\r\n                // Reset internal input's size\r\n                var textLength = $input.val().length,\r\n                    wordSpace  = Math.ceil(textLength / 5),\r\n                    size       = textLength + wordSpace + 1;\r\n                $input.attr('size', Math.max(this.inputSize, $input.val().length));\r\n            }, self));\r\n\r\n            self.$container.on('keydown', 'input', $.proxy(function (event)\r\n            {\r\n                var $input = $(event.target);\r\n\r\n                if (self.$element.attr('disabled'))\r\n                {\r\n                    self.$input.attr('disabled', 'disabled');\r\n                    return;\r\n                }\r\n\r\n                var text            = $input.val(),\r\n                    maxLengthReached = self.options.maxChars && text.length >= self.options.maxChars;\r\n                if (self.options.freeInput && (keyCombinationInList(event, self.options.confirmKeys) || maxLengthReached))\r\n                {\r\n                    self.add(maxLengthReached ? text.substr(0, self.options.maxChars) : text);\r\n                    $input.val('');\r\n                    (self.$input.typeahead) && self.$input.typeahead(\"val\",\"\");\r\n                    event.preventDefault();\r\n                }\r\n\r\n                // Reset internal input's size\r\n                var textLength = $input.val().length,\r\n                    wordSpace  = Math.ceil(textLength / 5),\r\n                    size      = textLength + wordSpace + 1;\r\n                $input.attr('size', Math.max(this.inputSize, $input.val().length));\r\n            }, self));\r\n\r\n            // Remove icon clicked\r\n            self.$container.on('click', '[data-role=remove]', $.proxy(function (event)\r\n            {\r\n                if (self.$element.attr('disabled'))\r\n                {\r\n                    return;\r\n                }\r\n                self.remove($(event.target).closest('.chip').data('item'));\r\n            }, self));\r\n\r\n            // Only add existing value as tags when using strings as tags\r\n            if (self.options.itemValue === defaultOptions.itemValue)\r\n            {\r\n                if (self.$element[0].tagName === 'INPUT')\r\n                {\r\n                    self.add(self.$element.val());\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n        * Removes all materialtags behaviour and unregsiter all event handlers\r\n        */\r\n        destroy : function ()\r\n        {\r\n            var self = this;\r\n\r\n            // Unbind events\r\n            self.$container.off('keydown', 'input');\r\n            self.$container.off('click', '[role=remove]');\r\n\r\n            self.$container.remove();\r\n            self.$element.removeData('materialtags');\r\n            self.$element.show();\r\n        },\r\n\r\n        /**\r\n        * Sets focus on the materialtags\r\n        */\r\n        focus : function ()\r\n        {\r\n            this.$input.focus();\r\n        },\r\n\r\n        /**\r\n        * Returns the internal input element\r\n        */\r\n        input : function ()\r\n        {\r\n            return this.$input;\r\n        },\r\n\r\n        /**\r\n        * Returns the element which is wrapped around the internal input. This\r\n        * is normally the $container, but typeahead.js moves the $input element.\r\n        */\r\n        findInputWrapper : function ()\r\n        {\r\n            var elt      = this.$input[0],\r\n                container = this.$container[0];\r\n            while (elt && elt.parentNode !== container)\r\n            {\r\n                elt = elt.parentNode;\r\n            }\r\n\r\n            return $(elt);\r\n        }\r\n    };\r\n\r\n    /**\r\n    * Register JQuery plugin\r\n    *\r\n    * @param arg1\r\n    * @param arg2\r\n    * @param arg3\r\n    * @returns {Array}\r\n    */\r\n    $.fn.materialtags = function (arg1, arg2, arg3)\r\n    {\r\n        var results = [];\r\n\r\n        this.each(function ()\r\n        {\r\n            var materialtags = $(this).data('materialtags');\r\n            // Initialize a new material tags input\r\n            if (!materialtags)\r\n            {\r\n                materialtags = new TagsMaterialize(this, arg1);\r\n                $(this).data('materialtags', materialtags);\r\n                results.push(materialtags);\r\n\r\n                // Init tags from $(this).val()\r\n                $(this).val($(this).val());\r\n            }\r\n            else if (!arg1 && !arg2)\r\n            {\r\n                // materialtags already exists\r\n                // no function, trying to init\r\n                results.push(materialtags);\r\n            }\r\n            else if (materialtags[arg1] !== undefined)\r\n            {\r\n                // Invoke function on existing tags input\r\n                if (materialtags[arg1].length === 3 && arg3 !== undefined)\r\n                {\r\n                    var retVal = materialtags[arg1](arg2, null, arg3);\r\n                }\r\n                else\r\n                {\r\n                    var retVal = materialtags[arg1](arg2);\r\n                }\r\n                if (retVal !== undefined)\r\n                {\r\n                    results.push(retVal);\r\n                }\r\n            }\r\n        });\r\n\r\n        if (typeof arg1 == 'string')\r\n        {\r\n            // Return the results from the invoked function calls\r\n            return results.length > 1 ? results : results[0];\r\n        }\r\n        else\r\n        {\r\n            return results;\r\n        }\r\n    };\r\n\r\n    $.fn.materialtags.defaults = defaultOptions;\r\n    $.fn.materialtags.Constructor = TagsMaterialize;\r\n\r\n    /**\r\n    * Most options support both a string or number as well as a function as\r\n    * option value. This function makes sure that the option with the given\r\n    * key in the given options is wrapped in a function\r\n    *\r\n    * @param options\r\n    * @param key\r\n    */\r\n    function makeOptionItemFunction(options, key)\r\n    {\r\n        if (typeof options[key] !== 'function')\r\n        {\r\n            var propertyName = options[key];\r\n            options[key]    = function (item) { return item[propertyName]; };\r\n        }\r\n    }\r\n\r\n    function makeOptionFunction(options, key)\r\n    {\r\n        if (typeof options[key] !== 'function')\r\n        {\r\n            var value    = options[key];\r\n            options[key] = function () { return value; };\r\n        }\r\n    }\r\n\r\n    /**\r\n    * HtmlEncodes the given value\r\n    */\r\n    var htmlEncodeContainer = $('<div />');\r\n\r\n    function htmlEncode(value)\r\n    {\r\n        if (value)\r\n        {\r\n            return htmlEncodeContainer.text(value).html();\r\n        }\r\n        else\r\n        {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Returns the position of the caret in the given input field\r\n    * http://flightschool.acylt.com/devnotes/caret-position-woes/\r\n    *\r\n    * @param oField\r\n    * @returns {number}\r\n    */\r\n    function doGetCaretPosition(oField)\r\n    {\r\n        var iCaretPos = 0;\r\n        if (document.selection)\r\n        {\r\n            oField.focus();\r\n            var oSel  = document.selection.createRange();\r\n            oSel.moveStart('character', -oField.value.length);\r\n            iCaretPos = oSel.text.length;\r\n        }\r\n        else if (oField.selectionStart || oField.selectionStart == '0')\r\n        {\r\n            iCaretPos = oField.selectionStart;\r\n        }\r\n        return (iCaretPos);\r\n    }\r\n\r\n    /**\r\n    * Returns boolean indicates whether user has pressed an expected key combination.\r\n    * http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\r\n    * [13, {which: 188, shiftKey: true}]\r\n    *\r\n    * @param keyDownEvent\r\n    * @param lookupList\r\n    * @returns {boolean}\r\n    */\r\n    function keyCombinationInList(keyDownEvent, lookupList)\r\n    {\r\n        var found = false;\r\n        $.each(lookupList, function (index, keyCombination)\r\n        {\r\n            if (typeof (keyCombination) === 'number' && keyDownEvent.which === keyCombination)\r\n            {\r\n                found = true;\r\n                return false;\r\n            }\r\n\r\n            if (keyDownEvent.which === keyCombination.which)\r\n            {\r\n                var alt   = !keyCombination.hasOwnProperty('altKey') || keyDownEvent.altKey === keyCombination.altKey,\r\n                    shift = !keyCombination.hasOwnProperty('shiftKey') || keyDownEvent.shiftKey === keyCombination.shiftKey,\r\n                    ctrl  = !keyCombination.hasOwnProperty('ctrlKey') || keyDownEvent.ctrlKey === keyCombination.ctrlKey;\r\n                if (alt && shift && ctrl)\r\n                {\r\n                    found = true;\r\n                    return false;\r\n                }\r\n            }\r\n        });\r\n\r\n        return found;\r\n    }\r\n\r\n    /**\r\n    * Initialize materialtags behaviour on inputs which have\r\n    * data-role=materialtags\r\n    */\r\n    $(function ()\r\n    {\r\n        $(\"input[data-role=materialtags]\").materialtags();\r\n    });\r\n})(window.jQuery);\r\n(function ($)\r\n{\r\n    \"use strict\";\r\n\r\n    /**\r\n    * Default Configuration\r\n    *\r\n    * @type {{tagClass: tagClass, itemValue: itemValue, itemText: itemText, itemTitle: itemTitle, freeInput: boolean, addOnBlur: boolean, maxTags: undefined, maxChars: undefined, confirmKeys: number[], onTagExists: onTagExists, trimValue: boolean, allowDuplicates: boolean}}\r\n    */\r\n    var defaultOptions = {\r\n        tagClass                    : tagClass,\r\n        itemValue                    : itemValue,\r\n        itemText                    : itemText,\r\n        itemTitle                    : itemTitle,\r\n        freeInput                    : true,\r\n        addOnBlur                    : true,\r\n        maxTags                        : undefined,\r\n        maxChars                    : undefined,\r\n        confirmKeys                    : [9,13, 44, 188],\r\n        onTagExists                    : onTagExists,\r\n        trimValue                    : true,\r\n        allowDuplicates             : false,\r\n        deleteTagsOnBackspace        : true,\r\n        deleteTagsOnDeleteKey        : true,\r\n        MoveTagOnLeftArrow            : true,\r\n        MoveTagOnRightArrow         : true,\r\n        autoselect                    : false,\r\n        CapitalizeFirstLetterOnly    : false,\r\n        prefilled                    : null,\r\n    };\r\n\r\n\r\n    function tagClass(item)\r\n    {\r\n        return 'chip';\r\n    }\r\n\r\n    function itemValue(item)\r\n    {\r\n        return item ? item.toString() : item;\r\n    }\r\n\r\n    function itemText(item)\r\n    {\r\n        return this.itemValue(item);\r\n    }\r\n\r\n    function itemTitle(item)\r\n    {\r\n        return null;\r\n    }\r\n\r\n    function onTagExists(item, $tag)\r\n    {\r\n        $tag.hide().fadeIn();\r\n    }\r\n\r\n    function selectFirstSuggestion(){\r\n        $('.tt-suggestion.tt-selectable').first().addClass('tt-cursor');\r\n        console.log($('.tt-suggestion.tt-selectable'));\r\n    }\r\n\r\n    /**\r\n    * Constructor function\r\n    *\r\n    * @param element\r\n    * @param options\r\n    * @constructor\r\n    */\r\n    function TagsMaterialize(element, options)\r\n    {\r\n        this.itemsArray = [];\r\n\r\n        this.$element = $(element);\r\n        this.$element.hide();\r\n\r\n        this.objectItems    = options && options.itemValue;\r\n        this.placeholderText = element.hasAttribute('placeholder') ? this.$element.attr('placeholder') : '';\r\n        this.inputSize      = Math.max(1, this.placeholderText.length);\r\n\r\n        this.$container = $('<div class=\"materialize-tags\"></div>');\r\n        this.$input    = $('<input type=\"text\" class=\"n-tag\"  placeholder=\"' + this.placeholderText + '\"/>').appendTo(this.$container);\r\n        this.$label    = this.$element.parent().find('label');\r\n\r\n        this.$element.before(this.$container);\r\n        this.build(options);\r\n\r\n        this.$label.on('click', function ()\r\n        {\r\n            $(this).addClass('active');\r\n            $(this).next('.materialize-tags').find('input.n-tag').focus();\r\n        });\r\n\r\n        this.$input.on('focus', function ()\r\n        {\r\n            var label = $(this).parents('.materialize-tags').parent().find('label');\r\n            $(this).parents('.materialize-tags').addClass('active');\r\n\r\n            if (!label.hasClass('active'))\r\n            {\r\n                label.addClass('active');\r\n            }\r\n        }).on('focusout', function ()\r\n        {\r\n            var parentContainer = $(this).parents('.materialize-tags'),\r\n                tags            = parentContainer.find('span.chip');\r\n            parentContainer.removeClass('active');\r\n            // Verify if is empty and remove \"active\" class from label\r\n            if (tags.length == 0 && $(this).val().length == 0)\r\n            {\r\n                parentContainer.parent().find('label').removeClass('active');\r\n            }\r\n        });\r\n    }\r\n\r\n    TagsMaterialize.prototype = {\r\n        constructor : TagsMaterialize,\r\n\r\n        /**\r\n        * Adds the given item as a new tag. Pass true to dontPushVal to prevent\r\n        * updating the elements val()\r\n        *\r\n        * @param item\r\n        * @param dontPushVal\r\n        * @param options\r\n        */\r\n        add : function (item, dontPushVal, options)\r\n        {\r\n            var self = this;\r\n\r\n            if (self.options.maxTags && self.itemsArray.length >= self.options.maxTags)\r\n            {\r\n                return;\r\n            }\r\n\r\n            // Ignore false values, except false\r\n            if (item !== false && !item)\r\n            {\r\n                return;\r\n            }\r\n\r\n            // Trim value\r\n            if (typeof item === \"string\" && self.options.trimValue)\r\n            {\r\n                item = $.trim(item);\r\n            }\r\n\r\n            // CapitalizeFirstLetter\r\n            if (typeof item === \"string\" && self.options.CapitalizeFirstLetterOnly)\r\n            {\r\n                item = item.charAt(0).toUpperCase() + item.slice(1);\r\n            }\r\n\r\n            // Throw an error when trying to add an object while the itemValue option was not set\r\n            if (typeof item === \"object\" && !self.objectItems)\r\n            {\r\n                throw(\"Can't add objects when itemValue option is not set\");\r\n            }\r\n\r\n            // Ignore strings only contain whitespace\r\n            if (item.toString().match(/^\\s*$/))\r\n            {\r\n                return;\r\n            }\r\n\r\n            if (typeof item === \"string\" && this.$element[0].tagName === 'INPUT')\r\n            {\r\n                var items = item.split(',');\r\n                if (items.length > 1)\r\n                {\r\n                    for (var i = 0; i < items.length; i++)\r\n                    {\r\n                        this.add(items[i], true);\r\n                    }\r\n\r\n                    if (!dontPushVal)\r\n                    {\r\n                        self.pushVal();\r\n                    }\r\n                    return;\r\n                }\r\n            }\r\n\r\n            var itemValue = self.options.itemValue(item),\r\n                itemText  = self.options.itemText(item),\r\n                tagClass  = self.options.tagClass(item),\r\n                itemTitle = self.options.itemTitle(item);\r\n\r\n            // Ignore items all ready added\r\n            var existing = $.grep(self.itemsArray, function (item) { return self.options.itemValue(item) === itemValue; })[0];\r\n            if (existing && !self.options.allowDuplicates)\r\n            {\r\n                // Invoke onTagExists\r\n                if (self.options.onTagExists)\r\n                {\r\n                    var $existingTag = $(\".tag\", self.$container).filter(function () { return $(this).data(\"item\") === existing; });\r\n                    self.options.onTagExists(item, $existingTag);\r\n                }\r\n                return;\r\n            }\r\n\r\n            // if length greater than limit\r\n            if (self.items().toString().length + item.length + 1 > self.options.maxInputLength)\r\n            {\r\n                return;\r\n            }\r\n\r\n            // raise beforeItemAdd arg\r\n            var beforeItemAddEvent = $.Event('beforeItemAdd', {item : item, cancel : false, options : options});\r\n            self.$element.trigger(beforeItemAddEvent);\r\n            if (beforeItemAddEvent.cancel)\r\n            {\r\n                return;\r\n            }\r\n\r\n            // register item in internal array and map\r\n            self.itemsArray.push(item);\r\n\r\n            // add a tag element\r\n            var $tag = $('<span class=\"' + htmlEncode(tagClass) + (itemTitle !== null ? ('\" title=\"' + itemTitle) : '') + '\">' + htmlEncode(itemText) + '<i class=\"material-icons\" data-role=\"remove\">close</i></span>');\r\n            $tag.data('item', item);\r\n            self.findInputWrapper().before($tag);\r\n            $tag.after(' ');\r\n\r\n            if (!dontPushVal)\r\n            {\r\n                self.pushVal();\r\n            }\r\n\r\n            // Add class when reached maxTags\r\n            if (self.options.maxTags === self.itemsArray.length || self.items().toString().length === self.options.maxInputLength)\r\n            {\r\n                self.$container.addClass('materialize-tags-max');\r\n                self.$input.blur();\r\n                self.$input.prop('readOnly', true);\r\n            }\r\n\r\n            self.$element.trigger($.Event('itemAdded', {item : item, options : options}));\r\n        },\r\n\r\n        /**\r\n        * Removes the given item. Pass true to dontPushVal to prevent updating the\r\n        * elements val()\r\n        *\r\n        * @param item\r\n        * @param dontPushVal\r\n        * @param options\r\n        */\r\n        remove : function (item, dontPushVal, options)\r\n        {\r\n            var self = this;\r\n\r\n            if (self.objectItems)\r\n            {\r\n                if (typeof item === \"object\")\r\n                {\r\n                    item = $.grep(self.itemsArray, function (other) { return self.options.itemValue(other) == self.options.itemValue(item); });\r\n                }\r\n                else\r\n                {\r\n                    item = $.grep(self.itemsArray, function (other) { return self.options.itemValue(other) == item; });\r\n                }\r\n\r\n                item = item[item.length - 1];\r\n            }\r\n\r\n            if (item)\r\n            {\r\n                var beforeItemRemoveEvent = $.Event('beforeItemRemove', {\r\n                    item    : item,\r\n                    cancel  : false,\r\n                    options : options\r\n                });\r\n                self.$element.trigger(beforeItemRemoveEvent);\r\n                if (beforeItemRemoveEvent.cancel)\r\n                {\r\n                    return;\r\n                }\r\n\r\n                $('.chip', self.$container).filter(function () { return $(this).data('item') === item; }).remove();\r\n\r\n                if ($.inArray(item, self.itemsArray) !== -1)\r\n                {\r\n                    self.itemsArray.splice($.inArray(item, self.itemsArray), 1);\r\n                }\r\n            }\r\n\r\n            if (!dontPushVal)\r\n            {\r\n                self.pushVal();\r\n            }\r\n\r\n            // Remove class when reached maxTags\r\n            if (self.options.maxTags > self.itemsArray.length)\r\n            {\r\n                self.$container.removeClass('materialize-tags-max');\r\n                self.$input.prop('readOnly', false);\r\n            }\r\n            self.$input.blur();\r\n            self.$element.trigger($.Event('itemRemoved', {item : item, options : options}));\r\n        },\r\n\r\n        /**\r\n        * Removes all items\r\n        */\r\n        removeAll : function ()\r\n        {\r\n            var self = this;\r\n\r\n            $('.chip', self.$container).remove();\r\n\r\n            while (self.itemsArray.length > 0)\r\n            {\r\n                self.itemsArray.pop();\r\n            }\r\n\r\n            self.pushVal();\r\n        },\r\n\r\n        /**\r\n        * Refreshes the tags so they match the text/value of their corresponding\r\n        * item.\r\n        */\r\n        refresh : function ()\r\n        {\r\n            var self = this;\r\n            $('.chip', self.$container).each(function ()\r\n            {\r\n                var $tag        = $(this),\r\n                    item        = $tag.data('item'),\r\n                    itemValue   = self.options.itemValue(item),\r\n                    itemText    = self.options.itemText(item),\r\n                    tagClass    = self.options.tagClass(item);\r\n\r\n                // Update tag's class and inner text\r\n                $tag.attr('class', null);\r\n                $tag.addClass('tag ' + htmlEncode(tagClass));\r\n                $tag.contents().filter(function ()\r\n                {\r\n                    return this.nodeType == 3;\r\n                })[0].nodeValue = htmlEncode(itemText);\r\n\r\n            });\r\n        },\r\n\r\n        /**\r\n        * Returns the items added as tags\r\n        */\r\n        items : function ()\r\n        {\r\n            return this.itemsArray;\r\n        },\r\n\r\n        /**\r\n        * Assembly value by retrieving the value of each item, and set it on the\r\n        * element.\r\n        */\r\n        pushVal : function ()\r\n        {\r\n            var self = this,\r\n                val  = $.map(self.items(), function (item)\r\n                {\r\n                    return self.options.itemValue(item).toString();\r\n                });\r\n\r\n            self.$element.val(val, true).trigger('change');\r\n            self.$input.typeahead('val', '');\r\n        },\r\n\r\n        /**\r\n        * Initializes the tags input behaviour on the element\r\n        *\r\n        * @param options\r\n        */\r\n        build : function (options)\r\n        {\r\n            var self = this;\r\n\r\n            self.options = $.extend({}, defaultOptions, options);\r\n            // When itemValue is set, freeInput should always be false\r\n\r\n            if (self.objectItems)\r\n            {\r\n                self.options.freeInput = false;\r\n            }\r\n\r\n            makeOptionItemFunction(self.options, 'itemValue');\r\n            makeOptionItemFunction(self.options, 'itemText');\r\n            makeOptionFunction(self.options, 'tagClass');\r\n\r\n            // Typeahead.js\r\n            if (self.options.typeaheadjs)\r\n            {\r\n                var typeaheadConfig   = null;\r\n                var typeaheadDatasets = {};\r\n\r\n                // Determine if main configurations were passed or simply a dataset\r\n                var typeaheadjs = self.options.typeaheadjs;\r\n                if ($.isArray(typeaheadjs))\r\n                {\r\n                    typeaheadConfig   = typeaheadjs[0];\r\n                    typeaheadDatasets = typeaheadjs[1];\r\n                }\r\n                else\r\n                {\r\n                    typeaheadDatasets = typeaheadjs;\r\n                }\r\n\r\n                self.$input.typeahead(typeaheadConfig, typeaheadDatasets).on('typeahead:selected', $.proxy(function (obj, datum)\r\n                {\r\n                    if (typeaheadDatasets.valueKey)\r\n                    {\r\n                        self.add(datum[typeaheadDatasets.valueKey]);\r\n                    }\r\n                    else\r\n                    {\r\n                        self.add(datum);\r\n                    }\r\n                    self.$input.typeahead('val', '');\r\n                }, self));\r\n            }\r\n\r\n            self.$container.on('click', $.proxy(function (event)\r\n            {\r\n                if (!self.$element.attr('disabled'))\r\n                {\r\n                    self.$input.removeAttr('disabled');\r\n                }\r\n                self.$input.focus();\r\n            }, self));\r\n\r\n            if (self.options.addOnBlur && self.options.freeInput)\r\n            {\r\n                self.$input.on('focusout', $.proxy(function (event)\r\n                {\r\n                    self.add(self.$input.val());\r\n\r\n                }, self));\r\n            }\r\n\r\n            self.$container.on('keydown', 'input', $.proxy(function (event)\r\n            {\r\n                var $input        = $(event.target),\r\n                    $inputWrapper = self.findInputWrapper();\r\n\r\n                if (self.$element.attr('disabled'))\r\n                {\r\n                    self.$input.attr('disabled', 'disabled');\r\n                    return;\r\n                }\r\n\r\n                switch (event.which)\r\n                {\r\n                    // BACKSPACE\r\n                    case 8:\r\n                        if (self.options.deleteTagsOnBackspace && doGetCaretPosition($input[0]) === 0)\r\n                        {\r\n                            var prev = $inputWrapper.prev();\r\n                            if (prev)\r\n                            {\r\n                                self.remove(prev.data('item'));\r\n                            }\r\n                        }\r\n                        break;\r\n\r\n                    // DELETE\r\n                    case 46:\r\n                        if (self.options.deleteTagsOnDeleteKey && doGetCaretPosition($input[0]) === 0)\r\n                        {\r\n                            var next = $inputWrapper.next();\r\n                            if (next)\r\n                            {\r\n                                self.remove(next.data('item'));\r\n                            }\r\n                        }\r\n                        break;\r\n\r\n                    // LEFT ARROW\r\n                    case 37:\r\n                        // Try to move the input before the previous tag\r\n                        var $prevTag = $inputWrapper.prev();\r\n                        if (self.options.MoveTagOnLeftArrow && $input.val().length === 0 && $prevTag[0])\r\n                        {\r\n                            $prevTag.before($inputWrapper);\r\n                            $input.focus();\r\n                        }\r\n                        break;\r\n                    // RIGHT ARROW\r\n                    case 39:\r\n                        // Try to move the input after the next tag\r\n                        var $nextTag = $inputWrapper.next();\r\n                        if (self.options.MoveTagOnRightArrow && $input.val().length === 0 && $nextTag[0])\r\n                        {\r\n                            $nextTag.after($inputWrapper);\r\n                            $input.focus();\r\n                        }\r\n                        break;\r\n                    default:\r\n                    // ignore\r\n                }\r\n\r\n                // Reset internal input's size\r\n                var textLength = $input.val().length,\r\n                    wordSpace  = Math.ceil(textLength / 5),\r\n                    size       = textLength + wordSpace + 1;\r\n                $input.attr('size', Math.max(this.inputSize, $input.val().length));\r\n            }, self));\r\n\r\n            self.$container.on('keydown', 'input', $.proxy(function (event)\r\n            {\r\n                var $input = $(event.target);\r\n\r\n                if (self.$element.attr('disabled'))\r\n                {\r\n                    self.$input.attr('disabled', 'disabled');\r\n                    return;\r\n                }\r\n\r\n                var text            = $input.val(),\r\n                    maxLengthReached = self.options.maxChars && text.length >= self.options.maxChars;\r\n                if (self.options.freeInput && (keyCombinationInList(event, self.options.confirmKeys) || maxLengthReached))\r\n                {\r\n                    self.add(maxLengthReached ? text.substr(0, self.options.maxChars) : text);\r\n                    $input.val('');\r\n                    (self.$input.typeahead) && self.$input.typeahead(\"val\",\"\");\r\n                    event.preventDefault();\r\n                }\r\n\r\n                // Reset internal input's size\r\n                var textLength = $input.val().length,\r\n                    wordSpace  = Math.ceil(textLength / 5),\r\n                    size      = textLength + wordSpace + 1;\r\n                $input.attr('size', Math.max(this.inputSize, $input.val().length));\r\n            }, self));\r\n\r\n            // Remove icon clicked\r\n            self.$container.on('click', '[data-role=remove]', $.proxy(function (event)\r\n            {\r\n                if (self.$element.attr('disabled'))\r\n                {\r\n                    return;\r\n                }\r\n                self.remove($(event.target).closest('.chip').data('item'));\r\n            }, self));\r\n\r\n            // Only add existing value as tags when using strings as tags\r\n            if (self.options.itemValue === defaultOptions.itemValue)\r\n            {\r\n                if (self.$element[0].tagName === 'INPUT')\r\n                {\r\n                    self.add(self.$element.val());\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n        * Removes all materialtags behaviour and unregsiter all event handlers\r\n        */\r\n        destroy : function ()\r\n        {\r\n            var self = this;\r\n\r\n            // Unbind events\r\n            self.$container.off('keydown', 'input');\r\n            self.$container.off('click', '[role=remove]');\r\n\r\n            self.$container.remove();\r\n            self.$element.removeData('materialtags');\r\n            self.$element.show();\r\n        },\r\n\r\n        /**\r\n        * Sets focus on the materialtags\r\n        */\r\n        focus : function ()\r\n        {\r\n            this.$input.focus();\r\n        },\r\n\r\n        /**\r\n        * Returns the internal input element\r\n        */\r\n        input : function ()\r\n        {\r\n            return this.$input;\r\n        },\r\n\r\n        /**\r\n        * Returns the element which is wrapped around the internal input. This\r\n        * is normally the $container, but typeahead.js moves the $input element.\r\n        */\r\n        findInputWrapper : function ()\r\n        {\r\n            var elt      = this.$input[0],\r\n                container = this.$container[0];\r\n            while (elt && elt.parentNode !== container)\r\n            {\r\n                elt = elt.parentNode;\r\n            }\r\n\r\n            return $(elt);\r\n        }\r\n    };\r\n\r\n    /**\r\n    * Register JQuery plugin\r\n    *\r\n    * @param arg1\r\n    * @param arg2\r\n    * @param arg3\r\n    * @returns {Array}\r\n    */\r\n    $.fn.materialtags = function (arg1, arg2, arg3)\r\n    {\r\n        var results = [];\r\n\r\n        this.each(function ()\r\n        {\r\n            var materialtags = $(this).data('materialtags');\r\n            // Initialize a new material tags input\r\n            if (!materialtags)\r\n            {\r\n                materialtags = new TagsMaterialize(this, arg1);\r\n                $(this).data('materialtags', materialtags);\r\n                results.push(materialtags);\r\n\r\n                // Init tags from $(this).val()\r\n                $(this).val($(this).val());\r\n            }\r\n            else if (!arg1 && !arg2)\r\n            {\r\n                // materialtags already exists\r\n                // no function, trying to init\r\n                results.push(materialtags);\r\n            }\r\n            else if (materialtags[arg1] !== undefined)\r\n            {\r\n                // Invoke function on existing tags input\r\n                if (materialtags[arg1].length === 3 && arg3 !== undefined)\r\n                {\r\n                    var retVal = materialtags[arg1](arg2, null, arg3);\r\n                }\r\n                else\r\n                {\r\n                    var retVal = materialtags[arg1](arg2);\r\n                }\r\n                if (retVal !== undefined)\r\n                {\r\n                    results.push(retVal);\r\n                }\r\n            }\r\n        });\r\n\r\n        if (typeof arg1 == 'string')\r\n        {\r\n            // Return the results from the invoked function calls\r\n            return results.length > 1 ? results : results[0];\r\n        }\r\n        else\r\n        {\r\n            return results;\r\n        }\r\n    };\r\n\r\n    $.fn.materialtags.defaults = defaultOptions;\r\n    $.fn.materialtags.Constructor = TagsMaterialize;\r\n\r\n    /**\r\n    * Most options support both a string or number as well as a function as\r\n    * option value. This function makes sure that the option with the given\r\n    * key in the given options is wrapped in a function\r\n    *\r\n    * @param options\r\n    * @param key\r\n    */\r\n    function makeOptionItemFunction(options, key)\r\n    {\r\n        if (typeof options[key] !== 'function')\r\n        {\r\n            var propertyName = options[key];\r\n            options[key]    = function (item) { return item[propertyName]; };\r\n        }\r\n    }\r\n\r\n    function makeOptionFunction(options, key)\r\n    {\r\n        if (typeof options[key] !== 'function')\r\n        {\r\n            var value    = options[key];\r\n            options[key] = function () { return value; };\r\n        }\r\n    }\r\n\r\n    /**\r\n    * HtmlEncodes the given value\r\n    */\r\n    var htmlEncodeContainer = $('<div />');\r\n\r\n    function htmlEncode(value)\r\n    {\r\n        if (value)\r\n        {\r\n            return htmlEncodeContainer.text(value).html();\r\n        }\r\n        else\r\n        {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Returns the position of the caret in the given input field\r\n    * http://flightschool.acylt.com/devnotes/caret-position-woes/\r\n    *\r\n    * @param oField\r\n    * @returns {number}\r\n    */\r\n    function doGetCaretPosition(oField)\r\n    {\r\n        var iCaretPos = 0;\r\n        if (document.selection)\r\n        {\r\n            oField.focus();\r\n            var oSel  = document.selection.createRange();\r\n            oSel.moveStart('character', -oField.value.length);\r\n            iCaretPos = oSel.text.length;\r\n        }\r\n        else if (oField.selectionStart || oField.selectionStart == '0')\r\n        {\r\n            iCaretPos = oField.selectionStart;\r\n        }\r\n        return (iCaretPos);\r\n    }\r\n\r\n    /**\r\n    * Returns boolean indicates whether user has pressed an expected key combination.\r\n    * http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\r\n    * [13, {which: 188, shiftKey: true}]\r\n    *\r\n    * @param keyDownEvent\r\n    * @param lookupList\r\n    * @returns {boolean}\r\n    */\r\n    function keyCombinationInList(keyDownEvent, lookupList)\r\n    {\r\n        var found = false;\r\n        $.each(lookupList, function (index, keyCombination)\r\n        {\r\n            if (typeof (keyCombination) === 'number' && keyDownEvent.which === keyCombination)\r\n            {\r\n                found = true;\r\n                return false;\r\n            }\r\n\r\n            if (keyDownEvent.which === keyCombination.which)\r\n            {\r\n                var alt   = !keyCombination.hasOwnProperty('altKey') || keyDownEvent.altKey === keyCombination.altKey,\r\n                    shift = !keyCombination.hasOwnProperty('shiftKey') || keyDownEvent.shiftKey === keyCombination.shiftKey,\r\n                    ctrl  = !keyCombination.hasOwnProperty('ctrlKey') || keyDownEvent.ctrlKey === keyCombination.ctrlKey;\r\n                if (alt && shift && ctrl)\r\n                {\r\n                    found = true;\r\n                    return false;\r\n                }\r\n            }\r\n        });\r\n\r\n        return found;\r\n    }\r\n\r\n    /**\r\n    * Initialize materialtags behaviour on inputs which have\r\n    * data-role=materialtags\r\n    */\r\n    $(function ()\r\n    {\r\n        $(\"input[data-role=materialtags]\").materialtags();\r\n    });\r\n})(window.jQuery);\r\n"]}